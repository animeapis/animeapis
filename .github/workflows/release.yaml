name: Animeshon APIs [release]

env:
  EMAIL: ${{ secrets.WORKFLOW_GITHUB_EMAIL }}
  USERNAME: ${{ secrets.WORKFLOW_GITHUB_USERNAME }}
  TOKEN: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}

on:
  push:
    branches: [ master ]
    tags-ignore: [ "**" ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Clone animeapis/animeapis
      uses: actions/checkout@v2

    - name: Clone animeapis/proto-binary
      uses: actions/checkout@v2
      with:
        repository: animeapis/proto-binary
        path: animeapis/proto-binary
        token: ${{ env.TOKEN }}

    - name: Clone animeapis/api-go-client
      uses: actions/checkout@v2
      with:
        repository: animeapis/api-go-client
        path: animeapis/api-go-client
        token: ${{ env.TOKEN }}

    - name: Clone animeapis/go-genproto
      uses: actions/checkout@v2
      with:
        repository: animeapis/go-genproto
        path: animeapis/go-genproto
        token: ${{ env.TOKEN }}

    - name: Set branch for animeapis/proto-binary
      working-directory: animeapis/proto-binary
      if: github.event_name == 'pull_request'
      run: |-
        if [[ -z $(git ls-remote --heads origin ${{ github.event.pull_request.head.ref }}) ]]; then
          git checkout -b ${{ github.event.pull_request.head.ref }}
        else
          git fetch origin ${{ github.event.pull_request.head.ref }}
          git checkout ${{ github.event.pull_request.head.ref }}
        fi

    - name: Set branch for animeapis/api-go-client
      working-directory: animeapis/api-go-client
      if: github.event_name == 'pull_request'
      run: |-
        if [[ -z $(git ls-remote --heads origin ${{ github.event.pull_request.head.ref }}) ]]; then
          git checkout -b ${{ github.event.pull_request.head.ref }}
        else
          git fetch origin ${{ github.event.pull_request.head.ref }}
          git checkout ${{ github.event.pull_request.head.ref }}
        fi

    - name: Set branch for animeapis/go-genproto
      working-directory: animeapis/go-genproto
      if: github.event_name == 'pull_request'
      run: |-
        if [[ -z $(git ls-remote --heads origin ${{ github.event.pull_request.head.ref }}) ]]; then
          git checkout -b ${{ github.event.pull_request.head.ref }}
        else
          git fetch origin ${{ github.event.pull_request.head.ref }}
          git checkout ${{ github.event.pull_request.head.ref }}
        fi

    - name: Cache bazel and bazelisk
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/bazelisk
          ~/.cache/bazel
        key: ${{ runner.os }}-${{ github.ref }}-bazel-${{ hashFiles('**/WORKSPACE') }}

    - name: Build all client libraries
      run: |-
        bazelisk build //...

    - name: Copy all generated files to their own repositories
      run: |-
        bash .github/workflows/release.sh

    - name: Push commit to animeapis/proto-binary
      working-directory: animeapis/proto-binary
      run: |-
        git config --local user.email "${{ env.EMAIL }}"
        git config --local user.name "${{ env.USERNAME }}"

        git config --local core.filemode false

        git add -A
        git diff-index --quiet HEAD || git commit -m "chore(all): auto-regenerate protobuf binaries"

        git remote set-url origin https://${{ env.USERNAME }}:${{ env.TOKEN }}@github.com/animeapis/proto-binary.git
        git push -u origin HEAD

    - name: Push commit to animeapis/api-go-client
      working-directory: animeapis/api-go-client
      run: |-
        git config --local user.email "${{ env.EMAIL }}"
        git config --local user.name "${{ env.USERNAME }}"

        git config --local core.filemode false

        git add -A
        git diff-index --quiet HEAD || git commit -m "chore(all): auto-regenerate gapics"

        git remote set-url origin https://${{ env.USERNAME }}:${{ env.TOKEN }}@github.com/animeapis/api-go-client.git
        git push -u origin HEAD

    - name: Push commit to animeapis/go-genproto
      working-directory: animeapis/go-genproto
      run: |-
        git config --local user.email "${{ env.EMAIL }}"
        git config --local user.name "${{ env.USERNAME }}"

        git config --local core.filemode false

        git add -A
        git diff-index --quiet HEAD || git commit -m "chore(all): auto-regenerate .pb.go files"

        git remote set-url origin https://${{ env.USERNAME }}:${{ env.TOKEN }}@github.com/animeapis/go-genproto.git
        git push -u origin HEAD
