load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_proto_grpc//doc:defs.bzl", "doc_markdown_compile")
load("//:defs.bzl", "proto_graphql", "proto_openapi")
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "go_gapic_assembly_pkg",
    "go_gapic_library",
    "go_proto_library",
    "go_test",
    "nodejs_gapic_assembly_pkg",
    "nodejs_gapic_library",
    "proto_library_with_info",
)

# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])

exports_files(glob(["*.json"]))

proto_library(
    name = "identity_proto",
    srcs = [
        "identity.proto",
    ],
    deps = [
        "@com_google_googleapis//google/api:annotations_proto",
        "@com_google_googleapis//google/api:client_proto",
        "@com_google_googleapis//google/api:field_behavior_proto",
        "@com_google_googleapis//google/api:resource_proto",
        "@com_google_googleapis//google/iam/v1:iam_policy_proto",
        "@com_google_googleapis//google/iam/v1:policy_proto",
        "@com_google_googleapis//google/longrunning:operations_proto",
        "@com_google_googleapis//google/type:date_proto",
        "@com_google_protobuf//:empty_proto",
        "@com_google_protobuf//:field_mask_proto",
        "@com_google_protobuf//:timestamp_proto",
    ],
)

proto_library_with_info(
    name = "identity_proto_with_info",
    deps = [
        ":identity_proto",
        "@com_google_googleapis//google/cloud:common_resources_proto",
        "@com_google_googleapis//google/rpc:error_details_proto",
    ],
)

##############################################################################
# Go
##############################################################################
go_proto_library(
    name = "identity_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
    importpath = "github.com/animeapis/go-genproto/identity/v1alpha1",
    protos = [":identity_proto"],
    deps = [
        "@go_googleapis//google/api:annotations_go_proto",
        "@go_googleapis//google/iam/v1:iam_go_proto",
        "@go_googleapis//google/longrunning:longrunning_go_proto",
        "@go_googleapis//google/type:date_go_proto",
    ],
)

go_gapic_library(
    name = "identity_go_gapic",
    srcs = [":identity_proto_with_info"],
    grpc_service_config = "identity_grpc_service_config.json",
    importpath = "github.com/animeapis/api-go-client/identity/v1alpha1;identity",
    service_yaml = "identity_v1alpha1.yaml",
    metadata = True,
    deps = [
        ":identity_go_proto",
        "@com_google_cloud_go//longrunning:go_default_library",
        "@com_google_cloud_go//longrunning/autogen:go_default_library",
        "@go_googleapis//google/iam/v1:iam_go_proto",
        "@go_googleapis//google/longrunning:longrunning_go_proto",
    ],
)

go_test(
    name = "identity_go_gapic_test",
    srcs = [":identity_go_gapic_srcjar_test"],
    embed = [":identity_go_gapic"],
    importpath = "github.com/animeapis/api-go-client/identity/v1alpha1",
)

# Open Source Packages
go_gapic_assembly_pkg(
    name = "gapi-identity-v1alpha1-go",
    deps = [
        ":identity_go_gapic",
        ":identity_go_gapic_srcjar-test.srcjar",
        ":identity_go_proto",
    ],
)

##############################################################################
# Node.js
##############################################################################
nodejs_gapic_library(
    name = "identity_nodejs_gapic",
    package_name = "@animeapis/identity",
    src = ":identity_proto_with_info",
    extra_protoc_parameters = ["metadata"],
    grpc_service_config = "identity_grpc_service_config.json",
    package = "animeshon.identity.v1alpha1",
    service_yaml = "identity_v1alpha1.yaml",
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "gapi-identity-v1alpha1-nodejs",
    deps = [
        ":identity_nodejs_gapic",
        ":identity_proto",
    ],
)

##############################################################################
# Markdown
##############################################################################
doc_markdown_compile(
    name = "identity_proto_markdown",
    protos = [":identity_proto"],
)

##############################################################################
# GraphQL
##############################################################################
proto_graphql(
    name = "identity_proto_graphql",
    protos = [":identity_proto"],
)

##############################################################################
# OpenAPI
##############################################################################
proto_openapi(
    name = "identity_proto_openapi",
    protos = [":identity_proto"],
    options = {
        "@com_animeshon_animeapis//:openapi_plugin": [
            # "title='Identity API'", # TODO: fix bazel plugin generator.
            "title=animeshon.identity",
            "version=v1alpha1"
        ],
    },
)
