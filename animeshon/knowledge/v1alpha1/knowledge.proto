syntax = "proto3";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package animeshon.knowledge.v1alpha1;

option go_package = "github.com/animeapis/go-genproto/knowledge/v1alpha1;knowledge";
option java_package = "com.animeshon.knowledge.v1alpha1";
option java_multiple_files = true;
option ruby_package = "Animeshon::Knowledge::v1Alpha1";

service Knowledge {
  option (google.api.default_host) = "knowledge.animeapis.com";

  rpc CreateContribution(CreateContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{parent=users/*}/contributions"
      body: "*"
    };
  }

  rpc ListContributions(ListContributionsRequest) returns (ListContributionsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/{parent=users/*}/contributions"
    };
  }

  rpc GetContribution(GetContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=users/*/contributions/*}"
    };
  }

  rpc ApproveContribution(ApproveContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:approve"
      body: "*"
    };
  }

  rpc ReviewContribution(ReviewContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      patch: "/v1alpha1/{name=users/*/contributions/*}"
      body: "*"
    };
  }

  rpc RejectContribution(RejectContributionRequest) returns (Contribution) {
    option (google.api.http) = {
      post: "/v1alpha1/{name=users/*/contributions/*}:reject"
      body: "*"
    };
  }
}

message Contribution {
  // The resource name of the contribution.
  string name = 1;

  repeated EntryEntity additions = 2;

  repeated EntryEntity deletions = 3;
}

message ReviewContributionRequest {
  string name = 1;

  repeated EntryEntity additions = 2;

  repeated EntryEntity deletions = 3;
}

message CreateContributionRequest {
  // The parent resource where this contribution will be created.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  string displayName = 2;

  repeated EntryEntity additions = 3;

  repeated EntryEntity deletions = 4;
}

message ListContributionsRequest {
  // The parent, which owns this collection of contributions.
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of users to return. Server may return fewer users
  // than requested. If unspecified, server will pick an appropriate default.
  int32 page_size = 2;

  // The value returned from the previous call.
  string page_token = 3;

  // A filter to be applied to results.
  string filter = 4;
}

message ListContributionsResponse {
  // The list of contributions.
  repeated Contribution contributions = 1;

  // A token to retrieve next page of results.
  string next_page_token = 2;
}

message GetContributionRequest {
  // The resource name of the requested contribution.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ApproveContributionRequest {
  string name = 1;
}

message RejectContributionRequest {
  string name = 1;
}

message EntryEntity {
  oneof entity {
    Anime anime = 1;
    GraphicNovel graphicNovel = 2;
  }
}

message Anime {
  string name = 1;
  string type = 2;
  repeated Text names = 3;
  repeated Running runnings = 4;
  repeated ContentRelation contentRelations = 5;
}

message GraphicNovel {
  string name = 1;
  string type = 2;
  repeated Text names = 3;
  repeated Running runnings = 4;
  repeated ContentRelation contentRelations = 5;
}

message Text {
  string text = 1;
  string localization = 2;
}

message Running {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  string localization = 3;
}

message Edge {
  string name = 1;
}

message ContentRelation {
  Edge edge = 1;
  string relation = 2;
}